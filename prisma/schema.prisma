generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Build {
  id          Int          @id @default(autoincrement())
  title       String       @db.VarChar(150)
  description String?
  race        Race         @default(NULL)
  v_race      Race         @default(NULL)
  user_id     Int
  public      Boolean?     @default(false)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  build_step  Build_step[]
  user        User         @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("builds")
}

model Build_step {
  id          Int    @id @default(autoincrement())
  description String @db.VarChar(150)
  population  Int
  timer       Int
  position    Int
  build_id    Int
  build       Build  @relation(fields: [build_id], references: [id], onDelete: Cascade)

  @@map("build_steps")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String?  @db.VarChar(255)
  lastName  String?  @db.VarChar(255)
  username  String   @db.VarChar(55)
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role     @default(GUEST)
  hashedRt  String?
  build     Build[]

  @@map("users")
}

enum Role {
  GUEST
  USER
  ADMIN
}

enum Race {
  ZERG
  TERRAN
  PROTOSS
  NULL
}
